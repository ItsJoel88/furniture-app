{"version":3,"sources":["store/action.js","components/searchBar.jsx","components/styleFilter.jsx","components/deliveryFilter.jsx","components/card.jsx","views/productPage.jsx","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["FetchDataAPI","setData","search","dispatch","a","fetch","method","headers","response","json","content","dataAPI","Object","assign","products","filter","val","index","name","toLowerCase","includes","type","data","status","console","log","error","SearchBar","searchHandler","enterSearch","className","required","onChange","onKeyPress","StyleFilter","checkHandler","dropDownHandler","furnitureStyles","id","tabIndex","onClick","evt","map","style","key","value","DeliveryFilter","Card","filterValue","useSelector","state","pending","src","alt","length","productByStyle","productByDelivery","filteredProduct","forEach","product","delivery_time","timeFilter","furniture_style","indexOf","push","i","j","Set","filterProduct","price","toLocaleString","str","description","substr","href","join","ProductPage","useDispatch","useState","setSearch","setStyle","useEffect","checkbox","currentTarget","childNodes","checked","underlineId","items","document","getElementById","underline","classList","contains","remove","display","add","e","target","furniture_styles","App","Boolean","window","location","hostname","match","fetchAPI","success","fetchReducer","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"iTAAaA,EAAe,SAACC,EAASC,GAAV,8CAAqB,WAAMC,GAAN,mBAAAC,EAAA,+EAElBC,MAAM,mDAAoD,CAC7EC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sBANiB,cAEnCC,EAFmC,gBAUrBA,EAASC,OAVY,cAUrCC,EAVqC,OAarCC,EADW,KAAXT,EACUU,OAAOC,OAAO,GAAIH,EAAS,CACjCI,SAAUJ,EAAQI,SAASC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAIE,KAAKC,cAAcC,SAASlB,EAAOiB,oBAGnFT,EAEdT,EAAQU,GAnBiC,UAoBnCR,EAAS,CAAEkB,KAAM,gBAAiBC,KAAMZ,IApBL,yBAqBnCP,EAAS,CAAEkB,KAAM,gBAAiBE,QAAQ,IArBP,0DAuBzCC,QAAQC,IAAR,MACAtB,EAAS,CAAEkB,KAAM,gBAAiBK,MAAM,EAAD,KAxBE,kEAArB,uDCGb,SAASC,EAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YAC/C,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,SACX,2BAAOT,KAAK,OAAOU,UAAQ,EAACC,SAAUJ,EAAeK,WAAYJ,IACjE,0BAAMC,UAAU,cAChB,0BAAMA,UAAU,QAChB,qDCPD,SAASI,EAAT,GAA0E,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,gBAEjE,OACI,yBAAKP,UAAU,eACX,yBAAKQ,GAAG,QAAQR,UAAU,sBAAsBS,SAAS,OACrD,0BAAMT,UAAU,SAASU,QAAS,SAACC,GAAD,OAASL,EAAgB,QAAS,gBAApE,mBACA,yBAAKN,UAAU,YAAYQ,GAAG,eAC9B,wBAAIA,GAAG,QAAQR,UAAU,SAEjBO,EAAkBA,EAAgBK,KAAI,SAACC,EAAO1B,GAAR,OAClC,yBAAK2B,IAAK3B,EAAOa,UAAU,cAAcU,QAASL,GAC9C,4BAAKQ,GACL,2BAAOtB,KAAK,WAAWS,UAAU,YAAYe,MAAOF,IACpD,0BAAMb,UAAU,kBAEnB,4CCfd,SAASgB,EAAT,GAA4D,IAAlCX,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAEnD,OACI,yBAAKN,UAAU,kBACX,yBAAKQ,GAAG,QAAQR,UAAU,sBAAsBS,SAAS,OACrD,0BAAMT,UAAU,SAASU,QAAS,SAACC,GAAD,OAASL,EAAgB,WAAY,gBAAvE,iBACA,yBAAKN,UAAU,YAAYQ,GAAG,eAC9B,wBAAIA,GAAG,WAAWR,UAAU,SACxB,yBAAKA,UAAU,cAAcU,QAASL,GAClC,uCACA,2BAAOd,KAAK,WAAWS,UAAU,YAAYe,MAAM,MACnD,0BAAMf,UAAU,eAEpB,yBAAKA,UAAU,cAAcU,QAASL,GAClC,uCACA,2BAAOd,KAAK,WAAWS,UAAU,YAAYe,MAAM,OACnD,0BAAMf,UAAU,eAEpB,yBAAKA,UAAU,cAAcU,QAASL,GAClC,uCACA,2BAAOd,KAAK,WAAWS,UAAU,YAAYe,MAAM,OACnD,0BAAMf,UAAU,eAEpB,yBAAKA,UAAU,cAAcU,QAASL,GAClC,oCACA,2BAAOd,KAAK,WAAWS,UAAU,YAAYe,MAAM,SACnD,0BAAMf,UAAU,kBCqBxC,IAuDeiB,EAvDF,SAAC,GAA+B,IAA7BjC,EAA4B,EAA5BA,SAAUkC,EAAkB,EAAlBA,YAGtB,OAFgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAInC,yBAAKrB,UAAU,cAAcsB,IAAI,uHAAuHC,IAAI,YAEzJvC,EAASwC,OACZN,EAAYM,UACZxC,EA3CZ,SAAuBA,EAAU6B,GAC7B,IAAIY,EAAiB,GACjBC,EAAoB,GACpBC,EAAkB,GAgBtB,GAdAd,EAAMe,SAAQ,SAAA1C,GACVF,EAAS4C,SAAQ,SAAAC,GAfzB,IAA6BC,EAAeC,GAgBc,IAA1CF,EAAQG,gBAAgBC,QAAQ/C,IAChCuC,EAAeS,KAAKL,IAEnB3C,KAnBY4C,GAmBgBD,EAAQC,iBAnBTC,GAmByB7C,GAlBtC,GAEK4C,GADlBC,IAkBFL,EAAkBQ,KAAKL,GAGf,SAAR3C,IAAmB2C,EAAQC,cAAgB,IAC3CJ,EAAkBQ,KAAKL,SAI/BJ,EAAeD,QAAUE,EAAkBF,OAC3C,IAAK,IAAIW,EAAI,EAAGA,EAAIV,EAAeD,OAAQW,IACvC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAkBF,OAAQY,IACtCX,EAAeU,GAAG/C,OAASsC,EAAkBU,GAAGhD,MAChDuC,EAAgBO,KAAKT,EAAeU,SAKhDR,EAAkBF,EAAeD,OAAf,YAA4B,IAAIa,IAAIZ,IAApC,YAA2D,IAAIY,IAAIX,IAEzF,OAAOC,EAaYW,CAActD,EAAUkC,IACrBM,OAEN,yBAAKF,IAAI,+EAA+EC,IAAI,gBAAgBvB,UAAU,kBAK9H,6BAEQhB,EAAS4B,KAAI,SAACiB,EAAS1C,GACnB,OACI,yBAAK2B,IAAK3B,EAAOa,UAAU,iBACvB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBACX,2BAAI6B,EAAQzC,OAEhB,yBAAKY,UAAU,SACX,iCAAO6B,EAAQU,MAAMC,oBAG7B,yBAAKxC,UAAU,eACX,4BA/EnByC,EAgFoCZ,EAAQa,aA/ElDlB,OAAS,IAAMiB,EAAIE,OAAO,EAAG,KAAOF,EAgFP,0BAAMzC,UAAU,oBAAhB,UAGR,yBAAKA,UAAU,eACX,uBAAG4C,KAAK,IAAIpC,GAAG,mBAAmBqB,EAAQG,gBAAgBa,KAAK,OAC/D,uBAAGD,KAAK,IAAIpC,GAAG,gBAAgBqB,EAAQC,cAAvC,YAtFxC,IAAqBW,MAiGT,yBAAKnB,IAAI,+EAA+EC,IAAI,gBAAgBvB,UAAU,mBCzFnH,SAAS8C,EAAT,GAA2B,eACtC,IAAMzE,EAAW0E,cADoB,EAEVC,mBAAS,IAFC,mBAE9BnE,EAF8B,KAErBV,EAFqB,OAGT6E,mBAAS,IAHA,mBAG9B5E,EAH8B,KAGtB6E,EAHsB,OAILD,mBAAS,IAJJ,mBAI9B9B,EAJ8B,KAIjBgC,EAJiB,KAMrCC,qBAAU,WACN9E,EAASH,EAAaC,EAASC,MAChC,IAEH,IAAMiC,EAAe,SAACM,GAClB,IAAIyC,EAAWzC,EAAI0C,cAAcC,WAAW,GACxCF,EAASG,SACTL,EAAS,YACFhC,EAAYjC,QAAO,SAACC,GAAD,OAASA,IAAQkE,EAASrC,WAEpDqC,EAASG,SAAU,IAEnBL,EAAS,GAAD,mBACDhC,GADC,CACYkC,EAASrC,SAE7BqC,EAASG,SAAU,IAIrBjD,EAAkB,SAACE,EAAIgD,GACzB,IAAMC,EAAQC,SAASC,eAAenD,GAChCoD,EAAYF,SAASC,eAAeH,GACtCC,EAAMI,UAAUC,SAAS,YACzBL,EAAMI,UAAUE,OAAO,WACvBN,EAAM5C,MAAMmD,QAAU,OACtBJ,EAAU/C,MAAMmD,QAAU,UAE1BP,EAAMI,UAAUI,IAAI,WACpBR,EAAM5C,MAAMmD,QAAU,QACtBJ,EAAU/C,MAAMmD,QAAU,SAiBlC,OACI,oCACI,yBAAKhE,UAAU,eACX,kBAACH,EAAD,CAAWC,cAhBD,SAACoE,GACnBjB,EAAUiB,EAAEC,OAAOpD,QAe8BhB,YAZjC,SAACmE,GACH,UAAVA,EAAEpD,MACFoD,EAAEC,OAAOpD,MAAQ,GACjB1C,EAASH,EAAaC,EAASC,KAGnC6E,EAAU,OAOF,yBAAKjD,UAAU,mBACX,kBAACI,EAAD,CAAaG,gBAAiB1B,EAAQuF,iBAAkB/D,aAAcA,EAAcC,gBAAiBA,IACrG,kBAACU,EAAD,CAAgBX,aAAcA,EAAcC,gBAAiBA,MAGrE,yBAAKN,UAAU,aACX,kBAAC,EAAD,CAAMhB,SAAUH,EAAQG,SAAUkC,YAAaA,MC7DhDmD,MARf,WACE,OACE,6BACE,kBAACvB,EAAD,QCKcwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WClBAC,EAAW,CACbtD,SAAS,EACTuD,QAAS,KACThF,MAAO,MAuBIiF,EApBM,WAA+B,IAA9BzD,EAA6B,uDAArBuD,EAAUG,EAAW,uCAC/C,OAAQA,EAAOvF,MACX,IAAK,gBACD,OAAOT,OAAOC,OAAO,GAAIqC,EAAO,CAC5BC,QAASyD,EAAOrF,SAExB,IAAK,gBACD,OAAOX,OAAOC,OAAO,GAAIqC,EAAO,CAC5BwD,QAASE,EAAOtF,OAExB,IAAK,cACD,OAAOV,OAAOC,OAAO,GAAIqC,EAAO,CAC5BxB,MAAOkF,EAAOlF,QAEtB,QACI,OAAOwB,I,QCXb2D,EAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,OAE5DC,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAEFrB,SAASC,eAAe,SFmHxB,kBAAmB4B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjG,GACLF,QAAQE,MAAMA,EAAMkG,YEjHbf,c","file":"static/js/main.4dcb31ac.chunk.js","sourcesContent":["export const FetchDataAPI = (setData, search) => async dispatch => {\n    try {\n        const response = await fetch('https://www.mocky.io/v2/5c9105cb330000112b649af8', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        });\n\n        let content = await response.json();\n        let dataAPI;\n        if (search !== '') {\n            dataAPI = Object.assign({}, content, {\n                products: content.products.filter((val, index) => val.name.toLowerCase().includes(search.toLowerCase()))\n            });\n        } else {\n            dataAPI = content;\n        }\n        setData(dataAPI);\n        await dispatch({ type: 'FETCH_SUCCESS', data: content });\n        await dispatch({ type: 'FETCH_PENDING', status: false });\n    } catch (err) {\n        console.log(err)\n        dispatch({ type: 'FETCH_PENDING', error: err });\n    };\n};\n","import React from 'react';\n\n\nexport default function SearchBar({ searchHandler, enterSearch }) {\n    return (\n        <div className=\"searchbar\">\n            <div className=\"group\">\n                <input type=\"text\" required onChange={searchHandler} onKeyPress={enterSearch} />\n                <span className=\"highlight\"></span>\n                <span className=\"bar\"></span>\n                <label>Search Furniture</label>\n            </div>\n        </div>\n    )\n};","import React from 'react';\n\n\nexport default function StyleFilter({ checkHandler, dropDownHandler, furnitureStyles }) {\n\n    return (\n        <div className=\"stylefilter\">\n            <div id=\"list1\" className=\"dropdown-check-list\" tabIndex=\"100\">\n                <span className=\"anchor\" onClick={(evt) => dropDownHandler('items', 'underline1')}>Furniture Style</span>\n                <div className=\"underline\" id=\"underline1\"></div>\n                <ul id=\"items\" className=\"items\">\n                    {\n                        furnitureStyles ? furnitureStyles.map((style, index) => (\n                            <div key={index} className=\"field-group\" onClick={checkHandler}>\n                                <li>{style}</li>\n                                <input type=\"checkbox\" className=\"check-box\" value={style} />\n                                <span className=\"customBox\"></span>\n                            </div>\n                        )) : <p>Loading...</p>\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n};","import React from 'react';\n\n\nexport default function DeliveryFilter({ checkHandler, dropDownHandler }) {\n\n    return (\n        <div className=\"deliveryfilter\">\n            <div id=\"list1\" className=\"dropdown-check-list\" tabIndex=\"100\">\n                <span className=\"anchor\" onClick={(evt) => dropDownHandler('delivery', 'underline2')}>Delivery Time</span>\n                <div className=\"underline\" id=\"underline2\"></div>\n                <ul id=\"delivery\" className=\"items\">\n                    <div className=\"field-group\" onClick={checkHandler}>\n                        <li>1 weeks</li>\n                        <input type=\"checkbox\" className=\"check-box\" value='7' />\n                        <span className=\"customBox\"></span>\n                    </div>\n                    <div className=\"field-group\" onClick={checkHandler}>\n                        <li>2 weeks</li>\n                        <input type=\"checkbox\" className=\"check-box\" value='14' />\n                        <span className=\"customBox\"></span>\n                    </div>\n                    <div className=\"field-group\" onClick={checkHandler}>\n                        <li>4 weeks</li>\n                        <input type=\"checkbox\" className=\"check-box\" value='28' />\n                        <span className=\"customBox\"></span>\n                    </div>\n                    <div className=\"field-group\" onClick={checkHandler}>\n                        <li>More</li>\n                        <input type=\"checkbox\" className=\"check-box\" value='more' />\n                        <span className=\"customBox\"></span>\n                    </div>\n                </ul>\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction wordChecker(str) {\n    return str.length > 114 ? str.substr(0, 115) : str;\n};\n\nfunction betweenDeliveryTime(delivery_time, timeFilter) {\n    let minDays = timeFilter - 7;\n    let maxDays = timeFilter;\n    if (delivery_time >= minDays && delivery_time <= maxDays) {\n        return true;\n    }\n    return false;\n};\n\nfunction filterProduct(products, style) {\n    let productByStyle = [];\n    let productByDelivery = [];\n    let filteredProduct = [];\n\n    style.forEach(val => {\n        products.forEach(product => {\n            if (product.furniture_style.indexOf(val) !== -1) {\n                productByStyle.push(product);\n            };\n            if (+val && betweenDeliveryTime(+product.delivery_time, +val)) {\n                productByDelivery.push(product);\n            };\n\n            if (val === 'more' && +product.delivery_time > 28) {\n                productByDelivery.push(product);\n            };\n        });\n    });\n    if (productByStyle.length && productByDelivery.length) {\n        for (let i = 0; i < productByStyle.length; i++) {\n            for (let j = 0; j < productByDelivery.length; j++) {\n                if (productByStyle[i].name === productByDelivery[j].name) {\n                    filteredProduct.push(productByStyle[i]);\n                }\n            };\n        };\n    } else {\n        filteredProduct = productByStyle.length ? [...new Set(productByStyle)] : [...new Set(productByDelivery)];\n    }\n    return filteredProduct;\n};\n\n\nconst Card = ({ products, filterValue }) => {\n    const pending = useSelector(state => state.pending);\n\n    if (pending) {\n        return (\n            <img className=\"loading-img\" src=\"https://1.bp.blogspot.com/-yIhXlQfYN1E/WMksG192LLI/AAAAAAAAA9w/txsqdQfykVksDEFshayeN54c0Gu6C3AAwCLcB/s400-c/glow.gif\" alt=\"loading\" />\n        );\n    } else if (products.length) {\n        if (filterValue.length) {\n            products = filterProduct(products, filterValue);\n            if (!products.length) {\n                return (\n                    <img src=\"https://cdn.dribbble.com/users/721524/screenshots/4117132/untitled-1-_1_.png\" alt=\"empty-product\" className=\"empty-product\" />\n                )\n            }\n        }\n        return (\n            <div>\n                {\n                    products.map((product, index) => {\n                        return (\n                            <div key={index} className=\"card-template\">\n                                <div className=\"card-body\">\n                                    <div className=\"card-top\">\n                                        <div className=\"product-name\">\n                                            <p>{product.name}</p>\n                                        </div>\n                                        <div className=\"price\">\n                                            <p>Rp {product.price.toLocaleString()}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"card-middle\">\n                                        <p>\n                                            {wordChecker(product.description)}\n                                            <span className=\"more-description\"> ...</span>\n                                        </p>\n                                    </div>\n                                    <div className=\"card-bottom\">\n                                        <a href=\"#\" id=\"furnitureStyles\">{product.furniture_style.join(', ')}</a>\n                                        <a href=\"#\" id=\"deliveryDays\">{product.delivery_time} Days</a>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    } else {\n        return (\n            <img src=\"https://cdn.dribbble.com/users/721524/screenshots/4117132/untitled-1-_1_.png\" alt=\"empty-product\" className=\"empty-product\" />\n        )\n    }\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './productPage.css';\n\nimport { FetchDataAPI } from '../store/action';\n\nimport SearchBar from '../components/searchBar';\nimport StyleFilter from '../components/styleFilter';\nimport DeliveryFilter from '../components/deliveryFilter';\nimport Card from '../components/card';\n\nexport default function ProductPage({ }) {\n    const dispatch = useDispatch();\n    const [dataAPI, setData] = useState([]);\n    const [search, setSearch] = useState('');\n    const [filterValue, setStyle] = useState([]);\n\n    useEffect(() => {\n        dispatch(FetchDataAPI(setData, search));\n    }, [])\n\n    const checkHandler = (evt) => {\n        let checkbox = evt.currentTarget.childNodes[1];\n        if (checkbox.checked) {\n            setStyle([\n                ...filterValue.filter((val) => val !== checkbox.value)\n            ]);\n            checkbox.checked = false;\n        } else {\n            setStyle([\n                ...filterValue, checkbox.value\n            ]);\n            checkbox.checked = true;\n        }\n    };\n\n    const dropDownHandler = (id, underlineId) => {\n        const items = document.getElementById(id);\n        const underline = document.getElementById(underlineId);\n        if (items.classList.contains('visible')) {\n            items.classList.remove('visible');\n            items.style.display = \"none\";\n            underline.style.display = \"block\";\n        } else {\n            items.classList.add('visible');\n            items.style.display = \"block\";\n            underline.style.display = \"none\";\n        };\n    };\n\n    const searchHandler = (e) => {\n        setSearch(e.target.value)\n    };\n\n    const enterSearch = (e) => {\n        if (e.key === 'Enter') {\n            e.target.value = '';\n            dispatch(FetchDataAPI(setData, search))\n        };\n\n        setSearch('');\n    }\n\n    return (\n        <>\n            <div className=\"header-page\">\n                <SearchBar searchHandler={searchHandler} enterSearch={enterSearch} />\n                <div className=\"dropdown-filter\">\n                    <StyleFilter furnitureStyles={dataAPI.furniture_styles} checkHandler={checkHandler} dropDownHandler={dropDownHandler} />\n                    <DeliveryFilter checkHandler={checkHandler} dropDownHandler={dropDownHandler} />\n                </div>\n            </div>\n            <div className=\"body-page\">\n                <Card products={dataAPI.products} filterValue={filterValue} />\n            </div>\n        </>\n    )\n\n}","import React from 'react';\n\nimport ProductPage from './views/productPage';\n\nfunction App() {\n  return (\n    <div>\n      <ProductPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const fetchAPI = {\n    pending: true,\n    success: null,\n    error: null\n}\n\nconst fetchReducer = (state = fetchAPI, action) => {\n    switch (action.type) {\n        case \"FETCH_PENDING\":\n            return Object.assign({}, state, {\n                pending: action.status\n            });\n        case \"FETCH_SUCCESS\":\n            return Object.assign({}, state, {\n                success: action.data\n            });\n        case \"FETCH_ERROR\":\n            return Object.assign({}, state, {\n                error: action.error\n            });\n        default:\n            return state;\n    };\n};\n\n\nexport default fetchReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducers from './store/reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nexport default store;\n"],"sourceRoot":""}